//
//	VidyoCalendarManager_Objc.h
//	VidyoClient
//
//	This file is auto generated, do not edit this file
//	Copyright (c) 2016 Vidyo, Inc. All rights reserved.
//

#import "VidyoCalendar_Objc.h"
#import "VidyoFormField_Objc.h"
@class VCCalendarManager;
@class VCCalendarManagerFeedback;
@class VCFormFieldOption;
typedef NS_ENUM(NSInteger, VCCalendarConnectResult){
	VCCalendarConnectResultOk,
	VCCalendarConnectResultNoService,
	VCCalendarConnectResultConnectionFailed,
	VCCalendarConnectResultConnectionLost,
	VCCalendarConnectResultConnectionTimeout,
	VCCalendarConnectResultInvalidCredentials,
	VCCalendarConnectResultInvalidCalendarId,
	VCCalendarConnectResultDisconnected,
	VCCalendarConnectResultGeneralError
};
typedef NS_ENUM(NSInteger, VCCalendarServiceStatus){
	VCCalendarServiceStatusInit,
	VCCalendarServiceStatusLoaded,
	VCCalendarServiceStatusLoadError,
	VCCalendarServiceStatusInvalidVersion,
	VCCalendarServiceStatusDllNotFound,
	VCCalendarServiceStatusApiProcError,
	VCCalendarServiceStatusPluginSvcNotInstalled,
	VCCalendarServiceStatusPluginSvcNotActive,
	VCCalendarServiceStatusPluginSvcAuthRequired,
	VCCalendarServiceStatusUnloaded
};
typedef NS_ENUM(NSInteger, VCFormFieldTextWrapMode){
	VCFormFieldTextWrapModeOff,
	VCFormFieldTextWrapModeVirtual,
	VCFormFieldTextWrapModePhysical
};
@protocol VCICalendarManagerFeedback
@optional

	-(void) calendarCreated:(VCCalendarManager*)cm Calendar:(VCCalendar*)calendar ResultCode:(VCCalendarCreateCode)resultCode CreateToken:(NSMutableString*)createToken;
	-(void) calendarDestroyed:(VCCalendarManager*)cm ResultCode:(VCCalendarCreateCode)resultCode PluginServiceId:(NSMutableString*)pluginServiceId CalendarName:(NSMutableString*)calendarName;
@end
@interface VCCalendarManagerFeedback : NSObject<VCICalendarManagerFeedback>
{
	void* objPtr;
}
	-(id) init;
	-(void) dealloc;
	-(void*)getObjectPtr;
@end
@interface VCCalendarManager : NSObject
{
	void* objPtr;
}

	-(id) init:(VCCalendarManagerFeedback*)feedback;
	-(void) dealloc;
	-(BOOL) createCalendarInstance:(VCCalendarFeedback*)feedback PluginServiceId:(NSMutableString*)pluginServiceId CalendarName:(NSMutableString*)calendarName CreateToken:(NSMutableString*)createToken;
	-(BOOL) destroyCalendarInstance:(VCCalendar*)cal;
	-(BOOL) getCalendarRegisteredServices:(NSMutableArray*)svcNames;
	-(BOOL) registerCalendarService:(NSMutableString*)pluginServiceName DllName:(NSMutableString*)dllName;
	-(id) initWithObject:(void*)rPtr;
	-(void*)getObjectPtr;
@end
@interface VCFormField : NSObject
{
}

	@property unsigned int cols;
	@property unsigned int maxlength;
	@property BOOL multiple;
	@property NSMutableString* name;
	@property NSMutableArray* options;
	@property unsigned int rows;
	@property unsigned int size;
	@property VCFormFieldType type;
	@property NSMutableString* value;
	@property VCFormFieldTextWrapMode wrap;
@end
@interface VCFormFieldOption : NSObject
{
}

	@property BOOL selected;
	@property NSMutableString* value;
@end
